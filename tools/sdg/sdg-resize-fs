#!/bin/bash

# TODO: WARNING
which modprobe >/dev/null || { echo 'missing modprobe, cannot proceed'; exit 1; }
which umount >/dev/null || { echo 'missing umount, cannot proceed'; exit 1; }
which fdisk >/dev/null || { echo 'missing fdisk, cannot proceed'; exit 1; }
which mkfs.ext3 >/dev/null || { echo 'missing mkfs.ext3, cannot proceed'; exit 1; }
which resize2fs >/dev/null || { echo 'missing resize2fs, cannot proceed'; exit 1; }
exit 1

# Solo has four partitions:
# /dev/mmcblk0p1
# /dev/mmcblk0p2
# /dev/mmcblk0p3 - root linux parition
# /dev/mmcblk0p4 - log partition

# We need to stop anything which is writing to /log
# or else we can't resize its filesystem.

# Drop the runlevel to 3 (disabling Solo services)
init 3
# Then stop syslog.
/etc/init.d/syslog stop
# Finally, we can unmount /log
umount /log

# We will DANGEROUSLY go ahead and resize the root
# partition and shrink the log partition.
cat <<'EOF' | fdisk /dev/mmcblk0
d
4
d
3
n
p
3
391168
900001
n
p
900002
15523839
w
EOF

# After succeeding in changing our root partitions, we
# tell the OS to re-read the parition list.
partprobe /dev/mmcblk0

# We need to format our log partition, or otherwise
# it will not be recognized on startup.
mkfs.ext3 /dev/mmcblk0p4

# We also want to expand our root partition to fill the 
# available space.
resize2fs /dev/mmcblk0p3

# Finally we restart (for good measure?) and see that
# Solo sees our changes on next bootup.
shutdown now
