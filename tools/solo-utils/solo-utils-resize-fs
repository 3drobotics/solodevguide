#!/bin/bash

need() {
    for var in "$@"; do
        which "$var" >/dev/null
        if [ $? != 0 ]; then
            return 1
        fi
    done
}

need "modprobe" "umount" "fdisk" "mkfs.ext3" "resize2fs" || {
    echo 'error: missing packages. Please run:'
    echo '   solo-utils tunnel-start'
    echo '   smart install parted libss2 e2fsprogs e2fsprogs-badblocks e2fsprogs-mke2fs lsof'
    exit 1
}

# Warn the user about their horrible mistakes.
echo 'WARNING: This can break your Solo and require a factory reset!'
echo 'Your Solo will turn off after and you will need to power cycle it.'
read -p 'Continue (y/n)? ' answer
case ${answer:0:1} in
    y|Y )
        echo 'Resizing partitions...'
    ;;
    * )
        exit 1
    ;;
esac

# Solo has four partitions:
# /dev/mmcblk0p1
# /dev/mmcblk0p2
# /dev/mmcblk0p3 - root linux parition
# /dev/mmcblk0p4 - log partition

# We need to stop anything which is writing to /log
# or else we can't resize its filesystem.

# Drop the runlevel to 3 (disabling Solo services)
init 2
killall runsv
if [ -e /dev/mmcblk0p4 ]; then
	# Then stop syslog.
	/etc/init.d/syslog stop
	sleep 1
	# Finally, we can unmount /log
	umount /log || { test $? -eq 32 && exit 1; }
fi

# We will DANGEROUSLY go ahead and resize the root
# partition and shrink the log partition.
cat <<'EOF' | fdisk /dev/mmcblk0
d
4
d
3
n
p
3
391168
900001
n
p
900002
15523839
w
EOF

sleep 3

# After succeeding in changing our root partitions, we
# tell the OS to re-read the parition list.
partprobe /dev/mmcblk0

# We need to format our log partition, or otherwise
# it will not be recognized on startup.
mkfs.ext3 /dev/mmcblk0p4

# We also want to expand our root partition to fill the 
# available space.
resize2fs /dev/mmcblk0p3

# Finally we restart (for good measure?) and see that
# Solo sees our changes on next bootup.
echo 'Shutting down now...'
sleep 5
shutdown now
