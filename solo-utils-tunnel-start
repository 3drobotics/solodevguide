#!/bin/bash

need() {
    for var in "$@"; do
        which "$var" >/dev/null
        if [ $? != 0 ]; then
            return 1
        fi
    done
}

need "sv" || {
    echo 'error: missing packages. Please run:'
    echo '   solo-utils tunnel-start'
    echo '   smart reinstall busybox'
    exit 1
}

HOST_IP=$(echo $SSH_CLIENT | awk '{ print $1}')
echo "$HOST_IP" > /opt/solo-utils/tunnel-service/host-ip

if [ ! -f ~/.ssh/id_rsa ]; then
    echo 'Creating private key for the first time...'
    cat /dev/zero | ssh-keygen -q -N ""
fi

ssh -q -oBatchMode=yes pc "exit 0"

if [ $? -ne 0 ]; then
    echo 'You must set up an SSH tunnel to your host PC first.'
    echo 'Run this in your terminal:'
    echo "    echo '$(cat ~/.ssh/id_rsa.pub)' >> ~/.ssh/authorized_keys"
    echo ''
    read -p "Host username (whoami): " username

    cat <<EOF > ~/.ssh/config
Host pc
    HostName $HOST_IP
    Port 22
    User $username
EOF

    ssh pc "echo 'setup succeeded!'" || { echo 'failed.' && exit 1; }
fi

# Make sure to overwrite /etc/resolv.conf with real nameservers
cat <<'EOF' > /etc/resolv.conf
options use-vc
nameserver 8.8.8.8
nameserver 8.8.4.4
EOF

sv status /opt/solo-utils/tunnel-service >/dev/null 2>&1
if [ $? -ne 0 ]; then
    runsv /opt/solo-utils/tunnel-service >/dev/null 2>&1 &
fi
sv up /opt/solo-utils/tunnel-service >/dev/null
echo 'tcp tunnelling service started.'
echo 'waiting 10s to connect...'
sleep 10

COUNT=60
while [[ $COUNT -ge 10 ]]; do
    echo "checking if we are connected... (${COUNT}s)"
    /opt/solo-utils/solo-utils-test-net >/dev/null
    if [[ $? == 0 ]]; then
        break
    fi
    sleep 10
    (( COUNT = COUNT - 10 ))
done
/opt/solo-utils/solo-utils-test-net >/dev/null
if [[ $? == 0 ]]; then
    echo 'connected. TCP tunneling now enabled.'
else
    /opt/solo-utils/solo-utils-tunnel-stop
    echo 'error: could not start TCP tunnel.'
    echo 'try re-running "solo-utils tunnel-start"'
    echo 'or resetting solo.'
fi
